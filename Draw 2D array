int[][] grid = {{1, 2, 1, 3}, {3, 4, 5, 6}, {2, 5, 3, 6}};
boolean[][] visibility;
boolean[][] matched;
int[] firstClick = {-1, -1};  
int[] secondClick = {-1, -1}; 
boolean checking = false;     
int checkStartTime = 0;      

void setup() {
    size(500, 500);
    strokeWeight(12);
    background(255);
    
    visibility = new boolean[grid.length][grid[0].length];
    matched = new boolean[grid.length][grid[0].length];
    
    for (int i = 0; i < grid.length; i++) {
        for (int j = 0; j < grid[0].length; j++) {
            visibility[i][j] = false;  
            matched[i][j] = false;     
        }
    }
}

void draw() {
    background(255);
    
    int rows = grid.length;
    int cols = grid[0].length;
    
    int w = width / cols;  
    int h = height / rows;
    
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            if (visibility[i][j] || matched[i][j]) {  
                draw_lines(10 + j * w, 10 + i * h, grid[i][j]);
            }
        }
    }
    
    if (checking && millis() - checkStartTime > 1000) {
        if (grid[firstClick[0]][firstClick[1]] != grid[secondClick[0]][secondClick[1]]) {
            visibility[firstClick[0]][firstClick[1]] = false;
            visibility[secondClick[0]][secondClick[1]] = false;
        } else {
            matched[firstClick[0]][firstClick[1]] = true;
            matched[secondClick[0]][secondClick[1]] = true;
        }

        firstClick[0] = -1;
        firstClick[1] = -1;
        secondClick[0] = -1;
        secondClick[1] = -1;
        checking = false;
    }
}

void draw_lines(int x, int y, int n) {
    for (int i = 0; i < n; i++) {
        line(x + i*20 , y, x + i*20, y + 40);
    }
}

void mouseClicked() {
    if (checking) return;  
    
    int cols = grid[0].length;
    int rows = grid.length;
    
    int w = width / cols;  
    int h = height / rows; 
    
    int j = (mouseX - 10) / w;
    int i = (mouseY - 10) / h;
    
    if (i >= 0 && i < rows && j >= 0 && j < cols && !matched[i][j]) {
        if (firstClick[0] == -1) {  // First click
            firstClick[0] = i;
            firstClick[1] = j;
            visibility[i][j] = true;
        } else if (secondClick[0] == -1) {  
            secondClick[0] = i;
            secondClick[1] = j;
            visibility[i][j] = true;
            checking = true;  
            checkStartTime = millis();  
        }
    }
}
